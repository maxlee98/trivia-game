services:
  user-service:
    build:
      context: ./user-service
    ports:
      - "5001:5001"
    depends_on:
      - postgres
    environment:
      - PROMETHEUS_SCRAPE=true  # Optional flag to identify Prometheus scraping

  
  game-service:
    build:
      context: ./game-service
    ports:
      - "5002:5002"
    depends_on:
      - postgres
    environment:
      - PROMETHEUS_SCRAPE=true  # Optional flag to identify Prometheus scraping


  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: trivia_game
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090" # Exposes Prometheus UI on port 9090


  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000" # Exposes Grafana dashboard on port 3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD} # Default password for Grafana


  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount the configuration file
    ports:
      - "80:80"  # Expose port 80
    depends_on:
      - user-service
      - game-service


volumes:
  postgres_data:
  grafana-data:
